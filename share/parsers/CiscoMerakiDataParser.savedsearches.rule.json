{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "properties": {
                "category": "Samples",
                "displayName": "Cisco Meraki Data Parser",
                "query": "\nlet MerakiSyslogDevices = pack_array(\"server1\", \"server2\"); // replace server1 and server2 with your actual Cisco Meraki device(s) and add more with comma separated\r\nunion isfuzzy=true \r\n        (\r\n\t\t\tmeraki_CL\r\n\t\t\t| project-rename LogMessage =  Message), \r\n        (\r\n\t\t\tSyslog\r\n\t\t\t| where Computer in (MerakiSyslogDevices)\r\n\t\t\t| project-rename LogMessage =  SyslogMessage)\r\n| extend Parser = extract_all(@\"(\\d+.\\d+)\\s([\\w\\-\\_]+)\\s([\\w\\-\\_]+)\\s([\\S\\s]+)$\", dynamic([1, 2, 3, 4]), LogMessage)[0]\r\n| extend Epoch = tostring(Parser[0]),\r\n        DeviceName = tostring(Parser[1]),\r\n        LogType = tostring(Parser[2]),\r\n        Substring = tostring(Parser[3])\r\n| extend EpochTimestamp = split(Epoch,\".\")\r\n| extend EventTimestamp = unixtime_seconds_todatetime(tolong(EpochTimestamp[0]))\r\n| extend SrcIpAddr = case(LogType has \"urls\", extract(@\"src=([0-9\\.]+)\\:\",1,Substring),\r\n\t\t\tLogType has \"flows\", extract(@\"src=([0-9\\.]+)\\s\",1,Substring), \r\n\t\t\tLogType has \"security_event\", extract(@\"src=([0-9\\.]+)\\:\",1,Substring), \r\n\t\t\tLogType has \"ids-alerts\", extract(@\"src=([0-9\\.]+)\\:\",1,Substring), \r\n            LogType has \"events\", extract(@\"(peer_contact|ip_src)=\\'([0-9\\.]+)\\:\",2,Substring), \"\"),\r\n\t\t SrcPortNumber = case(LogType has \"urls\", toint(extract(@\"src=([0-9\\.]+)\\:(\\d+)\\s\",2,Substring)),\r\n            LogType has \"flows\", toint(extract(@\"sport=(\\S+)\",1,Substring)), \r\n            LogType has \"security_event\", toint(extract(@\"src=([0-9\\.]+)\\:(\\d+)\",2,Substring)),\r\n            LogType has \"ids-alerts\", toint(extract(@\"src=([0-9\\.]+)\\:(\\d+)\",2,Substring)), \r\n            LogType has \"events\", toint(extract(@\"(peer_contact|ip_src)=\\'([0-9\\.]+)\\:(\\d+)\\'\",3,Substring)), dynamic(\"\")),\r\n\t\t DstIpAddr = case(LogType has \"urls\",extract(@\"dst=([0-9\\.]+)\\:\",1,Substring),\r\n            LogType has \"flows\", extract(@\"dst=([0-9\\.]+)\\s\",1,Substring), \r\n            LogType has \"security_event\", extract(@\"dst=([0-9\\.]+)\\:\",1,Substring), \"\"),\r\n\t\t DstPortNumber = case(LogType has \"urls\", toint(extract(@\"dst=([0-9\\.]+)\\:(\\d+)\\s\",2,Substring)),\r\n            LogType has \"flows\", toint(extract(@\"dport=(\\S+)\",1,Substring)), \r\n            LogType has \"security_event\", toint(extract(@\"dst=([0-9\\.]+)\\:(\\d+)\",2,Substring)), dynamic(\"\")),\r\n\t\t HttpRequestMethod = iff(LogType has \"urls\", extract(@\"request: (\\w+)\\s\",1,Substring), dynamic(\"\")),   \r\n\t\t Url = case(LogType has \"urls\", extract(@\"request: (\\w+)\\s(\\S+)\",2,Substring),\r\n            LogType has \"security_event\", tostring(extract(@\"url=(\\S+)\\s\",1,Substring)), \"\"),\r\n\t\t SrcMacAddr = case(LogType has \"airmarshal_events\", tostring(extract(@\"src=\\'(\\S+)\\'\",1,Substring)),\r\n            LogType has \"flows\", tostring(extract(@\"mac=(\\S+)\\s\",1,Substring)), \r\n            LogType has \"security_event\", tostring(extract(@\"shost=(\\S+)\\s\",1,Substring)), \"\"),\r\n\t\t NetworkProtocol = case(LogType has \"ids-alerts\", tostring(extract(@\"protocol=(\\w+)\\s\",1,Substring)),\r\n            LogType has \"flows\", extract(@\"protocol=(\\w+)\\s\",1,Substring),\r\n            LogType has \"security_event\", tostring(extract(@\"protocol=(\\w+)\\s\",1,Substring)), \"\"),\r\n\t\t Pattern = iff(LogType has \"flows\", extract(@\"pattern\\: ([\\S\\s]+)\",1,Substring), dynamic(\"\")),   \r\n\t\t EventType = case(LogType has \"airmarshal_events\", tostring(extract(@\"type=(\\S+)\",1,Substring)),\r\n            LogType has \"events\", tostring(extract(@\"type=(\\S+)\",1,Substring)), \r\n            LogType has \"security_event\", tostring(extract(@\"^(\\S+)\\s\\w+\\:\",1,Substring)), \"\"),\r\n\t\t Ssid = iff(LogType has \"airmarshal_events\", tostring(extract(@\"ssid=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),  \r\n\t\t Vap = case(LogType has \"airmarshal_events\", toint(extract(@\"vap=\\'(\\S+)\\'\\s\",1,Substring)),\r\n            LogType has \"events\", toint(extract(@\"vap=\\'(\\S+)\\'\\s\",1,Substring)), dynamic(\"\")),\r\n\t\t Bssid = iff(LogType has \"airmarshal_events\", tostring(extract(@\"bssid=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),   \r\n\t\t DstMacAddr = case(LogType has \"airmarshal_events\", tostring(extract(@\"dst=\\'(\\S+)\\'\",1,Substring)),\r\n            LogType has \"security_event\", tostring(extract(@\"dhost=(\\S+)\\s\",1,Substring)), \"\"),\r\n\t\t WiredMacAddr = iff(LogType has \"airmarshal_events\", tostring(extract(@\"wired_mac=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),  \r\n\t\t Channel = case(LogType has \"airmarshal_events\", toint(extract(@\"channel=\\'(\\d+)\\'\",1,Substring)),\r\n            LogType has \"events\", toint(extract(@\"channel=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t VlanId = iff(LogType has \"airmarshal_events\", toint(extract(@\"vlan_id=\\'(\\d+)\\'\",1,Substring)), dynamic(\"\")),  \r\n\t\t Rssi = iff(LogType has \"airmarshal_events\", toint(extract(@\"rssi=\\'(\\d+)\\'\",1,Substring)), dynamic(\"\")), \r\n\t\t FcType = iff(LogType has \"airmarshal_events\", toint(extract(@\"fc_type=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),  \r\n\t\t FcSubType = iff(LogType has \"airmarshal_events\", toint(extract(@\"fc_subtype=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Signature = case(LogType has \"security_event\", tostring(extract(@\"signature=(\\S+)\\s\",1,Substring)),\r\n            LogType has \"ids-alerts\", tostring(extract(@\"signature=(\\S+)\\s\",1,Substring)), \"\"),\r\n\t\t Priority = case(LogType has \"security_event\", toint(extract(@\"priority=(\\d+)\\s\",1,Substring)),\r\n            LogType has \"ids-alerts\", toint(extract(@\"priority=(\\d+)\\s\",1,Substring)), dynamic(\"\")),\r\n\t\t EventEpoch = case(LogType has \"security_event\", tostring(extract(@\"timestamp=(\\S+)\\s\",1,Substring)),\r\n            LogType has \"ids-alerts\", tostring(extract(@\"timestamp=(\\S+)\\s\",1,Substring)), \"\"),\r\n\t\t NetworkDirection = case(LogType has \"security_event\", tostring(extract(@\"direction=(\\S+)\",1,Substring)),\r\n            LogType has \"ids-alerts\", tostring(extract(@\"direction=(\\S+)\",1,Substring)), \"\"),\r\n\t\t Action = iff(LogType has \"security_event\", tostring(extract(@\"action=(\\w+)\",1,Substring)), dynamic(\"\")),\r\n\t\t Disposition = iff(LogType has \"security_event\", tostring(extract(@\"disposition=(\\w+)\",1,Substring)), dynamic(\"\")),\r\n\t\t Message = iff(LogType has \"security_event\", tostring(extract(@\"message: ([\\w\\.\\-\\+\\,\\s]+)(\\s\\w+\\=)?\",1,Substring)), dynamic(\"\")),\r\n\t\t Sha256 = iff(LogType has \"security_event\",  tostring(extract(@\"sha256(\\S+)?\",1,Substring)), dynamic(\"\")),\r\n\t\t VpnType = iff(LogType has \"events\",  tostring(extract(@\"vpn_type=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t PeerIdentity = iff(LogType has \"events\",  tostring(extract(@\"peer_ident=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Radio = iff(LogType has \"events\",  toint(extract(@\"radio=\\'(\\d+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Group = iff(LogType has \"events\",  toint(extract(@\"group=\\'(\\S+)?\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Attribute = iff(LogType has \"events\",  toint(extract(@\"attr=\\'(\\S+)?\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t ClientMacAddr = iff(LogType has \"events\",  tostring(extract(@\"client_mac=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Reason = iff(LogType has \"events\",  toint(extract(@\"reason=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t AppleDaReason = iff(LogType has \"events\",  toint(extract(@\"apple_da_reason=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Duration = iff(LogType has \"events\",  tostring(extract(@\"duration=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t FullConn = iff(LogType has \"events\",  tostring(extract(@\"full_conn=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t IpResp = iff(LogType has \"events\",  tostring(extract(@\"ip_resp=\\'(\\S+)\\'\\s\",1,Substring)), dynamic(\"\")),\r\n\t\t HttpResp = iff(LogType has \"events\",  tostring(extract(@\"http_resp=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t ArpResp = iff(LogType has \"events\",  tostring(extract(@\"arp_resp=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t ArpSrcIpAddr = iff(LogType has \"events\",  tostring(extract(@\"arp_src=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Connectivity = iff(LogType has \"events\",  tostring(extract(@\"connectivity=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Rtt = iff(LogType has \"events\",  tostring(extract(@\"rtt=\\'([\\w+\\.\\s]+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t UserName = iff(LogType has \"events\",  tostring(extract(@\"identity=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Aid = iff(LogType has \"events\",  tostring(extract(@\"aid=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t Spi = iff(LogType has \"events\",  tostring(extract(@\"spi=(\\S+)$\",1,Substring)), dynamic(\"\")),\r\n\t\t DvcMacAddr = iff(LogType has \"events\",  tostring(extract(@\"device=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t State = iff(LogType has \"events\",  tostring(extract(@\"state=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t AlarmId = iff(LogType has \"events\",  toint(extract(@\"alarm_id=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t DosCount = iff(LogType has \"events\",  tostring(extract(@\"dos_count=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t InterArrival = iff(LogType has \"events\",  tostring(extract(@\"inter_arrival=\\'(\\S+)\\'\",1,Substring)), dynamic(\"\")),\r\n\t\t LogTimestamp = case(LogType has \"security_event\", unixtime_seconds_todatetime(tolong(split(tostring(extract(@\"timestamp=(\\S+)\\s\",1,Substring)),\".\")[0])),\r\n            LogType has \"ids-alerts\", unixtime_seconds_todatetime(tolong(split(tostring(extract(@\"timestamp=(\\S+)\\s\",1,Substring)),\".\")[0])), dynamic(\"\")),\r\n\t\t IpAddr = iff(LogType has \"events\",  tostring(extract(@\"dhcp lease of ip ([\\d\\.]+)\", 1, Substring)), dynamic(\"\")),\r\n\t\t ServerMacAddr = iff(LogType has \"events\",  tostring(extract(@\"server mac ([\\w\\:]+)\", 1, Substring)), dynamic(\"\")),\r\n\t\t RouterIpAddr = iff(LogType has \"events\",  tostring(extract(@\"router ([\\d\\.]+)\", 1, Substring)), dynamic(\"\")),\r\n\t\t Subnet = iff(LogType has \"events\",  tostring(extract(@\"subnet ([\\d\\.]+)\", 1, Substring)), dynamic(\"\")),\r\n\t\t Dns = iff(LogType has \"events\",  split(extract(@\"dns ([\\d\\.\\,\\:\\s]+)\", 1, Substring), \", \"), dynamic(\"\"))\r\n| extend ClientMacAddr = iif(isempty(ClientMacAddr), tostring(extract(@\"client mac ([\\w\\:]+)\", 1, Substring)), ClientMacAddr),\r\n\t\t SrcPortNumber = iif(isempty(SrcPortNumber), toint(extract(@\"port=\\'(\\S+)\\'\",1,Substring)), SrcPortNumber)\r\n| extend Dns = iif(Dns[0] == \"\", \"\", Dns)\r\n| extend LogType = case(LogType !in (\"urls\", \"airmarshal_events\",\"security_event\",\"ids-alerts\", \"events\") and LogType !contains \"flows\", iif(isempty(LogType),\"\", LogType), LogType)\r\n| project-away Substring, Parser;\r\n",
                "functionAlias": "CiscoMeraki",
                "version": 2
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/cisco meraki data parser')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/savedSearches",
            "apiVersion": "2020-08-01"
        }
    ]
}
