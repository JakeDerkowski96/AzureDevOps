{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "properties": {
                "category": "Syslog",
                "displayName": "Cisco_Meraki",
                "query": "let LogHeader = Syslog\r\n| where Computer in (\"10.2.1.1\", \"172.16.254.1\", \"10.1.1.1\", \"10.6.1.1\", \"10.1.110.1\")\r\n| extend Parser = extract_all(@\"(\\d+.\\d+)\\s([\\w\\-\\_]+)\\s([\\w\\-\\_]+)\\s([\\S\\s]+)$\",dynamic([1,2,3,4]),SyslogMessage)\r\n| mv-expand Parser\r\n| extend Epoch = tostring(Parser[0]),\r\n        DeviceName = tostring(Parser[1]),\r\n        LogType = tostring(Parser[2]),\r\n        Substring = tostring(Parser[3])\r\n| extend EpochTimestamp = split(Epoch,\".\")\r\n| extend EventTimestamp = unixtime_seconds_todatetime(tolong(EpochTimestamp[0]))\r\n| project-away EpochTimestamp, Parser;\r\nlet UrlEvents = LogHeader\r\n| where LogType == \"urls\"\r\n| extend SrcIpAddr = extract(@\"src=([0-9\\.]+)\\:\",1,Substring),\r\n        SrcPortNumber = toint(extract(@\"src=([0-9\\.]+)\\:(\\d+)\\s\",2,Substring)),\r\n        DstIpAddr = extract(@\"dst=([0-9\\.]+)\\:\",1,Substring),\r\n        DstPortNumber = toint(extract(@\"dst=([0-9\\.]+)\\:(\\d+)\\s\",2,Substring)),\r\n        HttpRequestMethod = extract(@\"request: (\\w+)\\s\",1,Substring),\r\n        Url = extract(@\"request: (\\w+)\\s(\\S+)\",2,Substring)\r\n| project-away Substring;\r\nlet FlowEvents = LogHeader\r\n| where LogType contains \"flow\"\r\n| extend SrcIpAddr = extract(@\"src=([0-9\\.]+)\\s\",1,Substring),\r\n        SrcPortNumber = toint(extract(@\"sport=(\\S+)\",1,Substring)),\r\n        SrcMacAddr = tostring(extract(@\"mac=(\\S+)\\s\",1,Substring)),\r\n        DstIpAddr = extract(@\"dst=([0-9\\.]+)\\s\",1,Substring),\r\n        NetworkProtocol = extract(@\"protocol=(\\w+)\\s\",1,Substring),\r\n        DstPortNumber = toint(extract(@\"dport=(\\S+)\",1,Substring)),\r\n        Pattern = extract(@\"pattern\\: ([\\S\\s]+)\",1,Substring)\r\n| project-away Substring;\r\nlet AirMarshallEvents = LogHeader\r\n| where LogType == \"airmarshal_events\"\r\n| extend EventType = tostring(extract(@\"type=(\\S+)\",1,Substring)),\r\n        Ssid = tostring(extract(@\"ssid=\\'(\\S+)\\'\",1,Substring)),\r\n        Vap = toint(extract(@\"vap=\\'(\\S+)\\'\\s\",1,Substring)),\r\n        Bssid = tostring(extract(@\"bssid=\\'(\\S+)\\'\",1,Substring)),\r\n        SrcMacAddr = tostring(extract(@\"src=\\'(\\S+)\\'\",1,Substring)),\r\n        DstMacAddr = tostring(extract(@\"dst=\\'(\\S+)\\'\",1,Substring)),\r\n        WiredMacAddr = tostring(extract(@\"wired_mac=\\'(\\S+)\\'\",1,Substring)),\r\n        Channel = toint(extract(@\"channel=\\'(\\d+)\\'\",1,Substring)),\r\n        VlanId = toint(extract(@\"vlan_id=\\'(\\d+)\\'\",1,Substring)),\r\n        Rssi = toint(extract(@\"rssi=\\'(\\d+)\\'\",1,Substring)),\r\n        FcType = toint(extract(@\"fc_type=\\'(\\S+)\\'\",1,Substring)),\r\n        FcSubType = toint(extract(@\"fc_subtype=\\'(\\S+)\\'\",1,Substring))\r\n| project-away Substring;\r\nlet SecurityEvents = LogHeader\r\n| where LogType == \"security_event\"\r\n| extend EventType = tostring(extract(@\"^(\\S+)\\s\\w+\\:\",1,Substring)),\r\n        Signature = tostring(extract(@\"signature=(\\S+)\\s\",1,Substring)),\r\n        Url = tostring(extract(@\"url=(\\S+)\\s\",1,Substring)),\r\n        Priority = toint(extract(@\"priority=(\\d+)\\s\",1,Substring)),\r\n        EventEpoch = tostring(extract(@\"timestamp=(\\S+)\\s\",1,Substring)),\r\n        SrcMacAddr = tostring(extract(@\"shost=(\\S+)\\s\",1,Substring)),\r\n        DstMacAddr = tostring(extract(@\"dhost=(\\S+)\\s\",1,Substring)),\r\n        NetworkDirection = tostring(extract(@\"direction=(\\S+)\",1,Substring)),\r\n        SrcIpAddr = extract(@\"src=([0-9\\.]+)\\:\",1,Substring),\r\n        SrcPortNumber = toint(extract(@\"src=([0-9\\.]+)\\:(\\d+)\",2,Substring)),\r\n        DstIpAddr = extract(@\"dst=([0-9\\.]+)\\:\",1,Substring),\r\n        DstPortNumber = toint(extract(@\"dst=([0-9\\.]+)\\:(\\d+)\",2,Substring)),\r\n        NetworkProtocol = tostring(extract(@\"protocol=(\\w+)\\s\",1,Substring)),\r\n        Action = tostring(extract(@\"action=(\\w+)\",1,Substring)),\r\n        Disposition = tostring(extract(@\"disposition=(\\w+)\",1,Substring)),\r\n        Message = tostring(extract(@\"message: ([\\w\\.\\-\\+\\,\\s]+)(\\s\\w+\\=)?\",1,Substring)),\r\n        Sha256 = tostring(extract(@\"sha256(\\S+)?\",1,Substring))\r\n| extend EventEpochTimestamp = split(EventEpoch,\".\")\r\n| extend LogTimestamp = unixtime_seconds_todatetime(tolong(EventEpochTimestamp[0]))\r\n| project-away EventEpochTimestamp, Substring;\r\nlet IDSAlerts = LogHeader\r\n| where LogType == \"ids-alerts\"\r\n| extend Signature = tostring(extract(@\"signature=(\\S+)\\s\",1,Substring)),\r\n        Priority = toint(extract(@\"priority=(\\d+)\\s\",1,Substring)),\r\n        EventEpoch = tostring(extract(@\"timestamp=(\\S+)\\s\",1,Substring)),\r\n        NetworkDirection = tostring(extract(@\"direction=(\\S+)\",1,Substring)),\r\n        NetworkProtocol = tostring(extract(@\"protocol=(\\w+)\\s\",1,Substring)),\r\n        SrcIpAddr = extract(@\"src=([0-9\\.]+)\\:\",1,Substring),\r\n        SrcPortNumber = toint(extract(@\"src=([0-9\\.]+)\\:(\\d+)\",2,Substring))\r\n| extend EventEpochTimestamp = split(EventEpoch,\".\")\r\n| extend LogTimestamp = unixtime_seconds_todatetime(tolong(EventEpochTimestamp[0]))\r\n| project-away EventEpochTimestamp, Substring;\r\nlet EventLogs = LogHeader\r\n| where LogType == \"events\"\r\n| extend EventType = tostring(extract(@\"type=(\\S+)\",1,Substring)),\r\n        VpnType = tostring(extract(@\"vpn_type=\\'(\\S+)\\'\",1,Substring)),\r\n        SrcIpAddr = extract(@\"(peer_contact|ip_src)=\\'([0-9\\.]+)\\:\",2,Substring),\r\n        SrcPortNumber = toint(extract(@\"(peer_contact|ip_src)=\\'([0-9\\.]+)\\:(\\d+)\\'\",3,Substring)),\r\n        PeerIdentity = tostring(extract(@\"peer_ident=\\'(\\S+)\\'\",1,Substring)),\r\n        Radio = toint(extract(@\"radio=\\'(\\d+)\\'\",1,Substring)),\r\n        Vap = toint(extract(@\"vap=\\'(\\S+)\\'\\s\",1,Substring)),\r\n        Group = toint(extract(@\"group=\\'(\\S+)?\\'\",1,Substring)),\r\n        Attribute = toint(extract(@\"attr=\\'(\\S+)?\\'\",1,Substring)),\r\n        ClientMacAddr = tostring(extract(@\"client_mac=\\'(\\S+)\\'\",1,Substring)),\r\n        Channel = toint(extract(@\"channel=\\'(\\S+)\\'\",1,Substring)),\r\n        Reason = toint(extract(@\"reason=\\'(\\S+)\\'\",1,Substring)),\r\n        AppleDaReason = toint(extract(@\"apple_da_reason=\\'(\\S+)\\'\",1,Substring)),\r\n        Instigator = toint(extract(@\"instigator=\\'(\\S+)\\'\",1,Substring)),\r\n        Duration = tostring(extract(@\"duration=\\'(\\S+)\\'\",1,Substring)),\r\n        FullConn = tostring(extract(@\"full_conn=\\'(\\S+)\\'\",1,Substring)),\r\n        IpResp = tostring(extract(@\"ip_resp=\\'(\\S+)\\'\\s\",1,Substring)),\r\n        HttpResp = tostring(extract(@\"http_resp=\\'(\\S+)\\'\",1,Substring)),\r\n        ArpResp = tostring(extract(@\"arp_resp=\\'(\\S+)\\'\",1,Substring)),\r\n        ArpSrcIpAddr = tostring(extract(@\"arp_src=\\'(\\S+)\\'\",1,Substring)),\r\n        Connectivity = tostring(extract(@\"connectivity=\\'(\\S+)\\'\",1,Substring)),\r\n        Rtt = tostring(extract(@\"rtt=\\'([\\w+\\.\\s]+)\\'\",1,Substring)),\r\n        UserName = tostring(extract(@\"identity=\\'(\\S+)\\'\",1,Substring)),\r\n        Aid = tostring(extract(@\"aid=\\'(\\S+)\\'\",1,Substring)),\r\n        Spi = tostring(extract(@\"spi=(\\S+)$\",1,Substring)),\r\n        DvcMacAddr = tostring(extract(@\"device=\\'(\\S+)\\'\",1,Substring)),\r\n        State = tostring(extract(@\"state=\\'(\\S+)\\'\",1,Substring)),\r\n        AlarmId = toint(extract(@\"alarm_id=\\'(\\S+)\\'\",1,Substring)),\r\n        DosCount = tostring(extract(@\"dos_count=\\'(\\S+)\\'\",1,Substring)),\r\n        InterArrival = tostring(extract(@\"inter_arrival=\\'(\\S+)\\'\",1,Substring))\r\n| extend IpAddr = tostring(extract(@\"dhcp lease of ip ([\\d\\.]+)\", 1, Substring)),\r\n        ServerMacAddr = tostring(extract(@\"server mac ([\\w\\:]+)\", 1, Substring)),\r\n        ClientMacAddr = iif(isempty(ClientMacAddr), tostring(extract(@\"client mac ([\\w\\:]+)\", 1, Substring)), ClientMacAddr),\r\n        RouterIpAddr = tostring(extract(@\"router ([\\d\\.]+)\", 1, Substring)),\r\n        Subnet = tostring(extract(@\"subnet ([\\d\\.]+)\", 1, Substring)),\r\n        Dns = split(extract(@\"dns ([\\d\\.\\,\\:\\s]+)\", 1, Substring), \", \"),\r\n        SrcPortNumber = iif(isempty(SrcPortNumber), toint(extract(@\"port=\\'(\\S+)\\'\",1,Substring)), SrcPortNumber)\r\n| extend Dns = iif(Dns[0] == \"\", \"\", Dns)\r\n| project-away Substring;\r\nlet AllOtherLogs = LogHeader\r\n| where LogType !in (\"urls\", \"airmarshal_events\",\"security_event\",\"ids-alerts\", \"events\") and LogType !contains \"flow\";\r\nunion UrlEvents, FlowEvents, AirMarshallEvents, SecurityEvents, IDSAlerts, EventLogs, AllOtherLogs\r\n \r\n",
                "functionAlias": "Cisco_Meraki",
                "version": 2
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/6e665dce-a06c-48b9-bb72-88aed2105413_cisco_meraki')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/savedSearches",
            "apiVersion": "2020-08-01"
        }
    ]
}
